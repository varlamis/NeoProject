

import java.io.File;
import java.io.FileInputStream;
import java.io.FilenameFilter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;


/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author herc
 */
public class MainProject extends javax.swing.JFrame {

    ArrayList<SourceThread> threads;

    /**
     * Creates new form MainProject
     */
    public MainProject() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        intervalTxt = new javax.swing.JTextField();
        articlesTxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        startButton = new javax.swing.JButton();
        stopButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        intervalTxt.setText("600");

        articlesTxt.setText("200");

        jLabel1.setText("Interval");

        jLabel2.setText("Articles in memory");

        jLabel3.setText("sec");

        startButton.setText("Start");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        stopButton.setText("Stop");
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(122, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(articlesTxt)
                            .addComponent(intervalTxt))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(startButton)
                        .addGap(37, 37, 37)
                        .addComponent(stopButton)))
                .addGap(107, 107, 107))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(intervalTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(articlesTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startButton)
                    .addComponent(stopButton))
                .addContainerGap(142, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        threads = new ArrayList<SourceThread>();
        ArrayList<Source> sources = new ArrayList<Source>();
        int refreshInterval = new Integer(intervalTxt.getText()).intValue();
        int minArticles = new Integer(articlesTxt.getText()).intValue();;
        File dir = new File("conf");
        File[] files = dir.listFiles(new FilenameFilter() {
            public boolean accept(File dir, String name) {
                return name.toLowerCase().endsWith(".properties");
            }
        });
        for (File f : files) {
            Properties prop = new Properties();
            try {
                //load a properties file
                prop.load(new FileInputStream(f));

                String javascript = prop.getProperty("javascript","false");
                String rssf = prop.getProperty("rss");
                String encoding = prop.getProperty("charset");
                String name = prop.getProperty("name");
                String xpathbody = prop.getProperty("xpathbody");
                String dateFormat = prop.getProperty("dateFormat");
                String tagsToRemove = prop.getProperty("tagsToRemove");
                String bodyremoveregex = prop.getProperty("bodyremoveregex");
                if (rssf != null) {
                    Source s = new Source(javascript, name, rssf, encoding, xpathbody, dateFormat, tagsToRemove, bodyremoveregex);
                    sources.add(s);
                } else {
                    String url = prop.getProperty("url");
                    String xpathnode = prop.getProperty("xpathnode");
                    String xpathlink = prop.getProperty("xpathlink");
                    String xpathdate = prop.getProperty("xpathdate");
                    String xpathtitle = prop.getProperty("xpathtitle");
                    Source s = new NonSyndicatedSource(javascript, url, xpathnode, xpathlink, xpathdate, xpathtitle, name, rssf, encoding, xpathbody, dateFormat, tagsToRemove, bodyremoveregex);
                    sources.add(s);
                }
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
        for (Source s : sources) {
            SourceThread st = new SourceThread(s);
            threads.add(st);
        }
        while (true) {
            for (SourceThread st : threads) {
                try {
                    st.start();
                } catch (Exception ex) {
                    System.err.println("Skipping:\t" + st.source.name + ":\t" + ex.getMessage());
                }
            }
            try {
                Thread.sleep(NeoProject.refreshInterval * 1000);
            } catch (InterruptedException ex) {
                Logger.getLogger(NeoProject.class.getName()).log(Level.SEVERE, null, ex);
            }

        }        // TODO add your handling code here:
    }//GEN-LAST:event_startButtonActionPerformed

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed

        for (SourceThread st : threads) {
            try {
                st.flush();
                System.out.println("Flushed:\t" + st.source.name);
            } catch (Exception ex) {
                System.err.println("Error in flushing:\t" + st.source.name + ":\t" + ex.getMessage());
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_stopButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainProject().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField articlesTxt;
    private javax.swing.JTextField intervalTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton startButton;
    private javax.swing.JButton stopButton;
    // End of variables declaration//GEN-END:variables
}
